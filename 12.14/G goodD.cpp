/*
当n=1的时候
1. 直接将1从X移动到Z

当n=2的时候
1. 将1从X移动到Y轴
2. 将2从X移动到Z轴
3. 将1从Y移动到Z轴

当n=3的时候
1. 将1从X移动到Z
2. 将2从X移动到Y
3. 将1从Z移动到Y
4. 将3从X移动到Z
5. 将1从Y移动到X
6. 将2从Y移动到Z
7. 将1从X移动到Z

当n=4的时候

当前挪动的盘子为1,挪动轨迹为x==>y
当前挪动的盘子为2,挪动轨迹为x==>z
当前挪动的盘子为1,挪动轨迹为y==>z
当前挪动的盘子为3,挪动轨迹为x==>y
当前挪动的盘子为1,挪动轨迹为z==>x
当前挪动的盘子为2,挪动轨迹为z==>y
当前挪动的盘子为1,挪动轨迹为x==>y
当前挪动的盘子为4,挪动轨迹为x==>z
当前挪动的盘子为1,挪动轨迹为y==>z
当前挪动的盘子为2,挪动轨迹为y==>x
当前挪动的盘子为1,挪动轨迹为z==>x
当前挪动的盘子为3,挪动轨迹为y==>z
当前挪动的盘子为1,挪动轨迹为x==>y
当前挪动的盘子为2,挪动轨迹为x==>z
当前挪动的盘子为1,挪动轨迹为y==>z

总结规律为：

要想移动n个盘子从X轴到Z轴需要经过如下三步：
1. 将n-1个盘子从X轴移动到Y轴
2. 将第n个盘子从X轴移动到Z轴
3. 将n-1个盘子从Y轴移动到Z轴
*/


#include<stdio.h>
void han(int n,char a,char b,char c)
{
    if(n==1)
    printf("%c->%c\n",a,c); //当n=1的时候。直接移动 
    else{
        han(n-1,a,c,b);  //将n-1个盘子移动到b 
        printf("%c->%c\n",a,c); //将a盘剩下的最大的那个移动到c 
        han(n-1,b,a,c);
    }
}
int main(void)
{
    int n;
    while(scanf("%d",&n)!=EOF){
    han(n,'a','b','c');
     }
    return 0;
}